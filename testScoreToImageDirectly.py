import subprocess
import tempfile
import os
from music21 import converter

def generate_score_image(score):
    try:
        # Convert the score to LilyPond format
        lilypond_code = score.write(str(tempfile.NamedTemporaryFile(delete=False, suffix=".ly").name))

        # Create a temporary LilyPond file
        temp_lilypond_file = tempfile.NamedTemporaryFile(delete=False, suffix=".ly")
        with open(temp_lilypond_file.name, "w") as f:
            f.write(lilypond_code)
        
        # Generate the image using LilyPond
        subprocess.run(["lilypond", "-o", os.path.dirname(temp_lilypond_file.name), temp_lilypond_file.name])
        
        # Determine the image file name generated by LilyPond
        lilypond_image = os.path.splitext(temp_lilypond_file.name)[0] + ".png"
        
        # Load and return the image
        with open(lilypond_image, "rb") as image_file:
            image_data = image_file.read()
        
        return image_data
    except Exception as e:
        print("Error:", e)

# Example usage:
if __name__ == "__main__":
    # Load a Music21 score (replace with your own score loading logic)
    score = converter.parse('C:/Users/anton/OneDrive/Escritorio/Twinkle star files/Twinle Star ORIGINAL MUSESCORE MUSICXML.mxl')
    
    # Generate the image from the score
    image_data = generate_score_image(score)
    
    if(image_data):
        # Save or display the image as needed
        with open("output_score.png", "wb") as output_file:
            output_file.write(image_data)